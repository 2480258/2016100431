{"version":3,"sources":["../external \"path\"","../external \"vscode\"","../external \"chai\"","../external \"kite-api\"",".././test/completion.test.js","../external \"fs\"","../external \"kite-api/test/helpers/kite\"","../external \"kite-api/test/helpers/http\"",".././test/helpers.js",".././src/utils.js","../external \"child_process\"","../external \"os\"",".././src/completion.js","../external \"kite-connector/lib/logger\"",".././src/constants.js",".././src/urls.js","../external \"md5\"","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"names":[],"mappings":";;;;;;;;AAAA,kC;;;;;;;;;;;;ACAA,oC;;;;;;ACAA,kC;;;;;;;ACAA,sC;;;;;;;;;;;;;;;;;;;;;;ACAoB;AACQ;;AAEE;AACwC;AACZ;;AAEb;AACU;;AAEvD;AACA;AACA,mBAAmB,yDAAgB,KAAK,wDAAe,cAAc,wDAAe;AACpF;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,oDAAsB,CAAC,0CAAI;AAC9C,GAAG;AACH,EAAE,oEAAQ,EAAE,kBAAkB;AAC9B;AACA,MAAM,0EAAc;AACpB;AACA;AACA,gBAAgB,wEAAY,MAAM,sDAAe,CAAC,oDAAU;AAC5D;AACA;;AAEA;AACA,oBAAoB,sDAAe,CAAC,oDAAU;;AAE9C,eAAe,wEAAiC;AAChD,8DAA8D,wDAAe,iBAAiB,uBAAuB;AACrH,gBAAgB,QAAQ;AACxB,UAAU,8CAAY;;AAEtB,UAAU,8CAAY;AACtB,UAAU,8CAAY;AACtB,UAAU,8CAAY;;AAEtB,UAAU,gDAAc;AACxB,UAAU,8CAAY,qCAAqC,QAAQ;AACnE,UAAU,8CAAY;AACtB,SAAS;AACT,OAAO;AACP,KAAK;;AAEL;AACA,MAAM,0EAAc;AACpB;AACA;AACA,gBAAgB,wEAAY;AAC5B;AACA;;AAEA;AACA,oBAAoB,sDAAe,CAAC,oDAAU;;AAE9C,eAAe,wEAAiC;AAChD,8DAA8D,wDAAe,iBAAiB,uBAAuB;AACrH,qBAAqB,kDAAgB;AACrC,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;;;;;;ACnED,gC;;;;;;ACAA,wD;;;;;;ACAA,wD;;;;;;ACAa;;AAEb,aAAa,mBAAO,CAAC,CAAM;AAC3B,gBAAgB,mBAAO,CAAC,EAAU;AAClC,OAAO,wBAAwB,GAAG,mBAAO,CAAC,EAAc;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,SAAS,IAAI;AACrD,OAAO;AACP,wBAAwB,gBAAgB,SAAS,EAAE;AACnD;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C,YAAY,OAAO,GAAG,KAAK,GAAG,cAAc;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Fa;;AAEe;AACG;AACX;;AAEW;;AAE/B;AACA,SAAS,uDAAe;AACxB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,8EAAuC;;AAEzC;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA,KAAK,uDAAc;AACnB,kDAAkD;AAClD;AACA,MAAM,kDAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA,SAAS,kDAAW;AACpB;AACA,MAAM,8DAAY,iBAAiB,WAAW;AAC9C;AACA;AACA,MAAM,8DAAY,wCAAwC,WAAW;AACrE;AACA;AACA,MAAM,8DAAY,qBAAqB,WAAW;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AA8BE;;;;;;;AC9NF,2C;;;;;;ACAA,gC;;;;;;;;;;;;;;;;;ACAa;AAUG;AAC+B;AAI1B;AAIJ;AAID;;;AAGhB;AACA;AACA,WAAW,EAAE,EAAE,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,+DAA2B;AACxC;AACA,aAAa,6DAAyB;AACtC;AACA,aAAa,4DAAwB;AACrC;AACA,aAAa,8DAA0B;AACvC;AACA,aAAa,4DAAwB;AACrC;AACA,aAAa,4DAAwB;AACrC;AACA;;AAEA;AACA,aAAa,kDAAc,kBAAkB,MAAM,IAAI,GAAG,QAAQ,MAAM,MAAM,MAAM,GAAG,KAAK;;AAE5F,EAAE;;AAEF;AACA;;AAEA;AACA;AACA,IAAI,2DAAuB,IAAI,qEAAiC;AAChE;AACA;AACA,sBAAsB,yCAAK,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAc;AACjC;;AAEA;AACA;AACA,2BAA2B,yCAAK;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAa;AACtC;;AAEA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAa;AACvC;;AAEA;AACA;AACA,iBAAiB,OAAO,4DAAoB,yBAAyB,WAAW,yBAAyB;AACzG;;AAEA;AACA;;AAEe;AACf,sDAAsD,0CAAM;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,qEAAW;AACjB;AACA;;AAEA,qBAAqB,2DAAoB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,8DAA0B;;AAErD;AACA,sCAAsC,8DAA0B;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,uDAAe;AACtC;;AAEA;AACA;AACA,cAAc,sDAAe;AAC7B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,iDAAS,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,mBAAmB,kDAAc;AACjC,OAAO;AACP;AACA;AACA;;;;;;;ACxOA,uD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4B;AACJ;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wEAAiC;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wEAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mDAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB,EAAE,SAAS,mBAAmB;AACnD,KAAK,gBAAgB,EAAE,SAAS;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,iBAAiB,OAAO,mBAAmB;AAChD,KAAK,iBAAiB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA,KAAK,iBAAiB,OAAO,mBAAmB;AAChD,KAAK,iBAAiB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA,KAAK,iBAAiB,OAAO,mBAAmB;AAChD,KAAK,iBAAiB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA,KAAK,iBAAiB,OAAO,mBAAmB;AAChD,KAAK,iBAAiB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mDAAY;AAC9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS,wEACY;AACrB;AACA;AACA,MAAM,wDAAiB;AACvB;;AAEA;;AAEA;;AAEA;;AAcE;;AAEK;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJM;AACe;AACN;;AAES;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,gBAAgB,OAAO;AACvB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,4CAAI;;AAErB;AACA;;AAEA;AACA,8BAA8B,GAAG;AACjC;;AAEA;AACA,+BAA+B,GAAG;AAClC;;AAEA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA,gBAAgB,KAAK;AACrB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA,gBAAgB,KAAK;AACrB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,+BAA+B,GAAG;AAClC;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA,kFAAkF,aAAa;AAC/F;AACA;;AAEA;AACA,iBAAiB,wDAAe;AAChC,gBAAgB,0CAAG;AACnB;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO,GAAG,MAAM;AAC1C;AACA,sBAAsB,IAAI;AAC1B,yBAAyB,SAAS;AAClC;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;;AAEA;AACA,YAAY,gBAAgB,GAAG,mBAAmB,GAAG,cAAc,GAAG,iBAAiB;AACvF;;AAEA;AACA;AACA;;AA2BE;;;;;;;ACtLF,iC;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"completion.test.js","sourcesContent":["module.exports = require(\"path\");;","module.exports = require(\"vscode\");;","module.exports = require(\"chai\");;","module.exports = require(\"kite-api\");;","import fs from 'fs';\nimport vscode from 'vscode';\n\nimport { assert } from 'chai';\nimport { withKite, withKiteRoutes } from 'kite-api/test/helpers/kite';\nimport { fakeResponse } from 'kite-api/test/helpers/http';\n\nimport { fixtureURI, Kite } from './helpers';\nimport KiteCompletionProvider from '../src/completion';\n\nconst mockWindow = {\n  activeTextEditor: {\n    selection: new vscode.Selection(new vscode.Position(19, 13), new vscode.Position(19,13))\n  }\n};\n\ndescribe('KiteCompletionProvider', () => {\n  let provider;\n\n  beforeEach(() => {\n    provider = new KiteCompletionProvider(Kite, ['a'], ['('], mockWindow);\n  });\n  withKite({ reachable: true }, () => {\n    describe('when the endpoints returns some completions', () => {\n      withKiteRoutes([\n        [\n          o => /\\/clientapi\\/editor\\/complete/.test(o.path),\n          () => fakeResponse(200, fs.readFileSync(fixtureURI('completions.json').toString()))\n        ]\n      ]);\n\n      it('provides them as suggestions ', () => {\n        const uri = vscode.Uri.file(fixtureURI('sample.py'));\n\n        return vscode.workspace.openTextDocument(uri)\n        .then(doc => provider.provideCompletionItems(doc, new vscode.Position(19, 13), null, { triggerCharacter: '' }))\n        .then(({ items }) => {\n          assert.equal(items.length, 2);\n\n          assert.equal(items[0].label, 'json.dumps');\n          assert.equal(items[0].insertText, 'dumps');\n          assert.equal(items[0].sortText, '0');\n\n          assert.include(items[1].label, 'json.dumps(「obj」)');\n          assert.equal(items[1].insertText.value, 'dumps(${1:「obj」})$0');\n          assert.equal(items[1].sortText, '1');\n        });\n      });\n    });\n\n    describe('when the endpoint responds with a 404', () => {\n      withKiteRoutes([\n        [\n          o => /\\/clientapi\\/editor\\/completions/.test(o.path),\n          () => fakeResponse(404)\n        ]\n      ]);\n\n      it('returns empty array', () => {\n        const uri = vscode.Uri.file(fixtureURI('sample.py'));\n\n        return vscode.workspace.openTextDocument(uri)\n        .then(doc => provider.provideCompletionItems(doc, new vscode.Position(19, 13), null, { triggerCharacter: '' }))\n        .then(res => assert.deepEqual(res, []));\n      });\n    });\n  });\n});\n","module.exports = require(\"fs\");;","module.exports = require(\"kite-api/test/helpers/kite\");;","module.exports = require(\"kite-api/test/helpers/http\");;","\"use strict\";\n\nconst path = require(\"path\");\nconst KiteAPI = require(\"kite-api\");\nconst { promisifyReadResponse } = require(\"../src/utils\");\n\nconst Kite = {\n  request(req, data) {\n    return KiteAPI.request(req, data).then(resp => promisifyReadResponse(resp));\n  }\n};\n\nfunction waitsFor(m, f, t, i) {\n  if (typeof m == \"function\" && typeof f != \"function\") {\n    i = t;\n    t = f;\n    f = m;\n    m = \"something to happen\";\n  }\n\n  const intervalTime = i || 10;\n  const timeoutDuration = t || 2000;\n\n  return new Promise((resolve, reject) => {\n    const interval = setInterval(() => {\n      const res = f();\n      if (res) {\n        if (res.then) {\n          res.then(\n            () => {\n              clearTimeout(timeout);\n              clearInterval(interval);\n              resolve();\n            },\n            err => {}\n          );\n        } else {\n          clearTimeout(timeout);\n          clearInterval(interval);\n          resolve();\n        }\n      }\n    }, intervalTime);\n\n    const timeout = setTimeout(() => {\n      clearInterval(interval);\n      let msg;\n      if (typeof m == \"function\") {\n        msg = `Waited ${timeoutDuration}ms for ${m()}`;\n      } else {\n        msg = `Waited ${timeoutDuration}ms for ${m} but nothing happened`;\n      }\n      reject(new Error(msg));\n    }, timeoutDuration);\n  });\n}\n\nfunction sleep(duration) {\n  const t = new Date();\n  return waitsFor(`${duration}ms`, () => {\n    return new Date() - t > duration;\n  });\n}\n\nfunction delay(duration, block) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      block();\n      resolve();\n    }, duration);\n  });\n}\n\nfunction fixtureURI(filepath) {\n  return path.resolve(__dirname, \"fixtures\", filepath);\n}\n\nfunction log(v) {\n  console.log(v);\n  return v;\n}\n\nfunction formatCall({ method, path, payload }) {\n  return `${method} ${path} ${payload || \"\"}`;\n}\n\nmodule.exports = {\n  sleep,\n  delay,\n  fixtureURI,\n  waitsFor,\n  Kite,\n  log,\n  formatCall\n};\n","'use strict';\n\nimport vscode from 'vscode';\nimport cp from 'child_process';\nimport os from 'os';\n\nimport KiteAPI from \"kite-api\";\n\nfunction promisifiedKiteAPIRequest(req, data) {\n  return KiteAPI.request(req, data).then(resp => promisifyReadResponse(resp));\n};\n\nconst compact = a => a.filter(v => v && v !== '');\n\nconst uniq = a => a.reduce((m, v) => m.indexOf(v) === -1 ? m.concat(v) : m, []);\n\nconst flatten = a =>\n  a.reduce((m, o) => m.concat(Array.isArray(o) ? flatten(o) : o), []);\n\nconst head = a => a[0];\nconst last = a => a[a.length - 1];\nconst log = v => (console.log(v), v);\n\nconst evalPath = (o, ...path) =>\n  path.reduce((m, k) => {\n    if (k === '*' && m) { k = head(Object.keys(m)); }\n    return m && typeof m[k] !== 'undefined' ? m[k] : undefined;\n  }, o);\n\nconst detailLang = o =>\n  o && o.language_details\n    ? head(Object.keys(o.language_details)).toLowerCase()\n    : 'python';\n\nconst detailGet = (o, ...k) => evalPath(o, 'language_details', '*', ...k);\n\nconst detailExist = (o, ...k) => detailGet(o, ...k) != null;\n\nconst detailNotEmpty = (o, ...k) => {\n  const v = detailGet(o, ...k);\n  return v != null && v.length > 0;\n};\n\nconst getDetails = (o, ...details) =>\n  o.detail || (o.details && details.reduce((m, k) => {\n    return m || o.details[k];\n  }, null));\n\nconst getFunctionDetails = (o) => {\n  const type = head(Object.keys(o.details).filter(k => o.details[k]));\n  if (type === 'function') {\n    return o.details.function;\n  } else if (type === 'type') {\n    return detailGet(o.details.type, 'constructor');\n  }\n\n  return null;\n};\n\nconst merge = (a, b) => {\n  const c = {};\n  for (const k in a) { c[k] = a[k]; }\n  for (const k in b) { c[k] = b[k]; }\n  return c;\n};\n\nconst stripTags = s => s.replace(/<[^>]+>/g, '');\n\nconst truncate = (s, l = 200) =>\n  s && s.length > l\n    ? s.slice(0, l) + '…'\n    : s;\n\nfunction parseJSON(data, fallback) {\n  try {\n    return JSON.parse(data);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n// get time in seconds since the date\nfunction secondsSince(when) {\n  var now = new Date();\n  return (now.getTime() - when.getTime()) / 1000.0;\n}\n\nfunction promisifyRequest(request) {\n  return request.then\n    ? request\n    : new Promise((resolve, reject) => {\n      request.on('response', resp => resolve(resp));\n      request.on('error', err => reject(err));\n    });\n}\n\nfunction promisifyReadResponse(response) {\n  return new Promise((resolve, reject) => {\n    let data = '';\n    response.on('data', chunk => data += chunk);\n    response.on('end', () => resolve(data));\n    response.on('error', err => reject(err));\n  });\n}\n\nfunction delayPromise(factory, timeout) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      factory().then(resolve, reject);\n    }, timeout);\n  });\n}\n\nconst stopPropagationAndDefault = f => function(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  return f && f.call(this, e);\n};\n\nconst editorsForDocument = document =>\n  vscode.window.visibleTextEditors.filter(e => e.document === document);\n\nfunction params (url) {\n  return url.query.split('&').reduce((m, p) => {\n    const [k,v] = p.split('=');\n    m[k] = v;\n    return m;\n  }, {});\n}\n\nconst escapeCommandArguments = (o) => {\n  if(vscode.version < \"1.30.0\") {\n    return JSON.stringify(o).replace(/\"/g, '&quot;');\n  }\n  if (os.platform() == 'win32') {\n    return JSON.stringify(o).replace(/\\\\\\\\/g, \"/\");\n  }\n  return JSON.stringify(o);\n};\n\nconst kiteOpen = (url) => {\n  const env = Object.assign({}, process.env);\n  delete env[\"ELECTRON_RUN_AS_NODE\"];\n  switch(os.platform()) {\n    case 'darwin':\n      cp.spawnSync(\"open\", [url], { env: env });\n      break;\n    case 'win32':\n      cp.spawnSync(\"cmd\", [\"/b\", \"/c\", \"start\",\"\", url], { env: env });\n      break;\n    case 'linux':\n      cp.spawnSync(\"xdg-open\", [url], { env: env });\n  }\n};\n\nconst extToLangMap = new Map([\n  [\"c\", \"c\"],\n  [\"cc\",\"cpp\"],\n  [\"cpp\",\"cpp\"],\n  [\"cs\",\"csharp\"],\n  [\"css\",\"css\"],\n  [\"go\",\"go\"],\n  [\"h\",\"c\"],\n  [\"hpp\",\"cpp\"],\n  [\"html\",\"html\"],\n  [\"java\", \"java\"],\n  [\"js\", \"javascript\"],\n  [\"jsx\",\"jsx\"],\n  [\"kt\",\"kotlin\"],\n  [\"less\",\"less\"],\n  [\"m\",\"objectivec\"],\n  [\"php\", \"php\"],\n  [\"py\", \"python\"],\n  [\"pyw\", \"python\"],\n  [\"rb\",\"ruby\"],\n  [\"scala\",\"scala\"],\n  [\"sh\",\"bash\"],\n  [\"ts\",\"typescript\"],\n  [\"tsx\",\"tsx\"],\n  [\"vue\",\"vue\"],\n]);\n\nconst getSupportedLanguage = document => {\n  if (document.isUntitled) {\n    return null;\n  }\n\n  const ext = document.fileName.split(\".\").slice(-1)[0];\n  if (extToLangMap.has(ext)) {\n    return extToLangMap.get(ext);\n  }\n  return null;\n};\n\nexport {\n  compact,\n  delayPromise,\n  flatten,\n  head,\n  last,\n  log,\n  escapeCommandArguments,\n  detailExist,\n  detailGet,\n  detailLang,\n  detailNotEmpty,\n  parseJSON,\n  promisifyReadResponse,\n  promisifyRequest,\n  secondsSince,\n  promisifiedKiteAPIRequest,\n  stopPropagationAndDefault,\n  truncate,\n  uniq,\n  stripTags,\n  editorsForDocument,\n  params,\n  merge,\n  getDetails,\n  getFunctionDetails,\n  kiteOpen,\n  getSupportedLanguage,\n};\n","module.exports = require(\"child_process\");;","module.exports = require(\"os\");;","\"use strict\";\nimport {\n  CompletionItem,\n  CompletionItemKind,\n  CompletionList,\n  MarkdownString,\n  Range,\n  SnippetString,\n  window,\n  workspace\n} from 'vscode';\nimport Logger from \"kite-connector/lib/logger\";\nimport {\n  KITE_BRANDING,\n  OFFSET_ENCODING\n} from \"./constants\";\nimport {\n  parseJSON,\n  getSupportedLanguage\n} from \"./utils\";\nimport {\n  completionsPath,\n  normalizeDriveLetter\n} from \"./urls\";\n\n\nconst fill = (s, l, f = \" \") => {\n  while (s.length < l) {\n    s = `${f}${s}`;\n  }\n  return s;\n};\n\nconst kindForHint = hint => {\n  switch (hint) {\n    case \"call\":\n    case \"function\":\n      return CompletionItemKind.Function;\n    case \"module\":\n      return CompletionItemKind.Module;\n    case \"type\":\n      return CompletionItemKind.Class;\n    case \"keyword\":\n      return CompletionItemKind.Keyword;\n    case \"string\":\n      return CompletionItemKind.Value;\n    default:\n      return CompletionItemKind.Value;\n  }\n};\n\nconst buildMarkdown = (id, hint, documentation_text) => {\n  return new MarkdownString(`[𝕜𝕚𝕥𝕖]&nbsp;&nbsp;__${id}__&nbsp;&nbsp;&nbsp;&nbsp;_${hint}_\n\n${documentation_text}\n\n            `);\n};\n\nconst buildFilterText = (document, position) => {\n  const selection =\n    window.activeTextEditor && window.activeTextEditor.selection;\n  const wordRange =\n    document.getWordRangeAtPosition(position) ||\n    (selection && new Range(selection.start, selection.end)); // Snippet placeholder selection range\n  if (!wordRange) {\n    return null;\n  }\n  return document.getText(wordRange);\n};\n\n// Transforms Kite completion into a CompletionItem\nconst processCompletion = (\n  document,\n  c,\n  displayPrefix,\n  numDigits,\n  i\n) => {\n  const item = new CompletionItem(displayPrefix + c.display);\n  item.insertText = c.snippet.text;\n\n  const start = document.positionAt(c.replace.begin);\n  const end = document.positionAt(c.replace.end);\n  const replaceRange = new Range(start, end);\n  item.filterText = document.getText(replaceRange);\n  item.keepWhitespace = true;\n\n  if (i === 0) {\n    item.preselect = true;\n  }\n  item.sortText = fill(String(i), numDigits, \"\\0\");\n  item.range = replaceRange;\n  if (c.documentation.text !== \"\") {\n    item.documentation = buildMarkdown(c.web_id, c.hint, c.documentation.text);\n  }\n  // Note: The space following the Kite icon is the unicode space U+2003 instead\n  // of the normal space U+0020 because VS Code strips the detail.\n  item.detail = c.hint + KITE_BRANDING;\n  item.kind = kindForHint(c.hint);\n\n  if (c.snippet.placeholders.length > 0) {\n    var offset = 0;\n    let i = 0;\n    for (i = 0; i < c.snippet.placeholders.length; i++) {\n      let placeholder = c.snippet.placeholders[i];\n      placeholder.begin += offset;\n      placeholder.end += offset;\n      item.insertText =\n        item.insertText.slice(0, placeholder.begin) +\n        \"${\" +\n        (i + 1).toString() +\n        \":\" +\n        item.insertText.slice(placeholder.begin, placeholder.end) +\n        \"}\" +\n        item.insertText.slice(placeholder.end);\n      offset += 5;\n    }\n    // Add closing tab stop\n    item.insertText += \"$0\";\n    item.insertText = new SnippetString(item.insertText);\n  }\n\n  item.command = {\n    command: \"kite.insert-completion\",\n    arguments: [{ lang: getSupportedLanguage(document), completion: { snippet: { text: c.snippet.text }}}]\n  };\n\n  return item;\n};\n\nexport default class KiteCompletionProvider {\n  constructor(Kite, triggers, optionalTriggers, win = window) {\n    this.Kite = Kite;\n    this.triggers = triggers;\n    this.optionalTriggers = optionalTriggers || [];\n    this.window = win;\n  }\n\n  provideCompletionItems(document, position, token, context) {\n    const text = document.getText();\n\n    if (text.length > this.Kite.maxFileSize) {\n      Logger.warn(\"buffer contents too large, not attempting completions\");\n      return Promise.resolve([]);\n    }\n\n    const filename = normalizeDriveLetter(document.fileName);\n    const filterText = buildFilterText(document, position);\n    return this.getCompletions(document, text, filename, filterText, context);\n  }\n\n  getCompletions(document, text, filename, filterText, context) {\n    const selection = this.window.activeTextEditor.selection;\n    const begin = document.offsetAt(selection.start);\n    const end = document.offsetAt(selection.end);\n    const enableSnippets = workspace.getConfiguration(\"kite\").enableSnippets;\n\n    const isOptionalTrigger = this.optionalTriggers.indexOf(context.triggerCharacter) !== -1;\n    const shouldShowOptionalTrigger = workspace.getConfiguration('kite').enableOptionalCompletionsTriggers;\n\n    const payload = {\n      text,\n      editor: \"vscode\",\n      filename,\n      position: {\n        begin,\n        end\n      },\n      no_snippets: !enableSnippets,\n      offset_encoding: OFFSET_ENCODING,\n    };\n\n    return this.Kite.request(\n      {\n        path: completionsPath(),\n        method: \"POST\"\n      },\n      JSON.stringify(payload)\n    )\n      .then(data => {\n        if (isOptionalTrigger && !shouldShowOptionalTrigger) {\n          // Don't return anything because if we're wrong, it'll block all other\n          // VS Code completions that come after the space.\n          return [];\n        }\n\n        data = parseJSON(data, {});\n        const completions = data.completions || [];\n        // # of completion items + its children\n        const totalCompletions = completions.reduce((total, completion) => {\n          let toReturn = total + 1;\n          if (completion.children) {\n            toReturn += completion.children.length;\n          }\n          return toReturn;\n        }, 0);\n        // # of digits needed to represent totalCompletions. Used for sortText.\n        const numDigits = String(totalCompletions).length;\n        const completionItems = [];\n        // Used to track order in suggestion list\n        let idx = 0;\n        completions.forEach(c => {\n          completionItems.push(\n            processCompletion(\n              document,\n              c,\n              \"\",\n              numDigits,\n              idx\n            )\n          );\n          const children = c.children || [];\n          let offset = 1;\n          children.forEach(child => {\n            completionItems.push(\n              processCompletion(\n                document,\n                child,\n                \"  \",\n                numDigits,\n                idx + offset\n              )\n            );\n            offset += 1;\n          });\n          idx += offset;\n        });\n        return new CompletionList(completionItems, true);\n      })\n      .catch(() => []);\n  }\n}\n","module.exports = require(\"kite-connector/lib/logger\");;","import vscode from 'vscode';\nimport path from 'path';\n\n// Cache of type: []string\nlet ENABLED_AND_SUPPORTED = null;\n// Cache of type: bool\nlet PYTHON_ENABLED = null;\n\nfunction EnabledAndSupported() {\n  if (ENABLED_AND_SUPPORTED === null) {\n    const disabled = vscode.workspace.getConfiguration('kite').completions.disabledFileExtensions;\n    const enabled = SupportedExtensions().filter(ext => !disabled.includes(ext));\n    ENABLED_AND_SUPPORTED = enabled;\n  }\n  return ENABLED_AND_SUPPORTED;\n}\n\nfunction PythonEnabled() {\n  if (PYTHON_ENABLED === null) {\n    const disabled = vscode.workspace.getConfiguration('kite').completions.disabledFileExtensions;\n    PYTHON_ENABLED = !disabled.includes('.py');\n  }\n  return PYTHON_ENABLED;\n}\n\nfunction IsEnabledAndSupported(fileName) {\n  const fileExt = path.extname(fileName);\n  return EnabledAndSupported().includes(fileExt);\n}\n\nfunction CompletionsSupport() {\n  // Python has \"FullCompletionsSupport\" so filter from regular.\n  const enabled = EnabledAndSupported()\n                  .filter(ext => ext != \".py\" && ext != \".pyw\")\n                  .join(',');\n  if (enabled === \"\") {\n    return [];\n  }\n  return [\n    { pattern: `**/*{${enabled}}`, scheme: \"file\" },\n    { pattern: `**/*{${enabled}}`, scheme: \"untitled\" }\n  ];\n}\n\nfunction requirePythonEnabled(fn) {\n  return (...args) => {\n    if (!PythonEnabled()) {\n      return [];\n    }\n    return fn(...args);\n  };\n}\n\nfunction FullCompletionsSupport() {\n  return [\n    { pattern: \"**/*.{py,pyw}\", scheme: \"file\" },\n    { pattern: \"**/*.{py,pyw}\", scheme: \"untitled\" }\n  ];\n}\n\nfunction DefinitionsSupport() {\n  return [\n    { pattern: \"**/*.{py,pyw}\", scheme: \"file\" },\n    { pattern: \"**/*.{py,pyw}\", scheme: \"untitled\" }\n  ];\n}\n\nfunction HoverSupport() {\n  return [\n    { pattern: \"**/*.{py,pyw}\", scheme: \"file\" },\n    { pattern: \"**/*.{py,pyw}\", scheme: \"untitled\" }\n  ];\n}\n\nfunction SignaturesSupport() {\n  return [\n    { pattern: \"**/*.{py,pyw}\", scheme: \"file\" },\n    { pattern: \"**/*.{py,pyw}\", scheme: \"untitled\" }\n  ];\n}\n\nfunction SupportedExtensions() {\n  return [\n    \".c\",\n    \".cc\",\n    \".cpp\",\n    \".cs\",\n    \".css\",\n    \".go\",\n    \".h\",\n    \".hpp\",\n    \".html\",\n    \".java\",\n    \".js\",\n    \".jsx\",\n    \".kt\",\n    \".less\",\n    \".m\",\n    \".php\",\n    \".py\",\n    \".pyw\",\n    \".rb\",\n    \".scala\",\n    \".sh\",\n    \".ts\",\n    \".tsx\",\n    \".vue\"\n  ];\n}\n\nfunction IsSupportedFile(fileName) {\n  const fileExt = path.extname(fileName);\n  return SupportedExtensions().includes(fileExt);\n}\n\nconst CONNECT_ERROR_LOCKOUT = 15 * 60;\n\nconst ATTEMPTS = 30;\n\nconst INTERVAL = 2500;\n\nconst ERROR_COLOR = () => {\n  // For the High Contrast Theme, editorWarning.foreground renders the text invisible.\n  return vscode.workspace\n    .getConfiguration(\"workbench\")\n    .colorTheme.includes(\"High Contrast\")\n    ? \"#ff0000\"\n    : vscode.ThemeColor(\"editorWarning.foreground\");\n};\n\nconst WARNING_COLOR = \"#929497\";\n\nconst KITE_BRANDING = \" 𝕜𝕚𝕥𝕖 \";\n\nconst OFFSET_ENCODING = \"utf-16\";\n\nexport {\n  ATTEMPTS,\n  INTERVAL,\n  IsEnabledAndSupported,\n  CompletionsSupport,\n  SupportedExtensions,\n  IsSupportedFile,\n  CONNECT_ERROR_LOCKOUT,\n  ERROR_COLOR,\n  WARNING_COLOR,\n  KITE_BRANDING,\n  OFFSET_ENCODING\n};\n\nexport const PythonFullCompletionsSupport = requirePythonEnabled(FullCompletionsSupport);\nexport const PythonDefinitionsSupport = requirePythonEnabled(DefinitionsSupport);\nexport const PythonHoverSupport = requirePythonEnabled(HoverSupport);\nexport const PythonSignaturesSupport = requirePythonEnabled(SignaturesSupport);\n","'use strict';\nimport vscode from 'vscode';\nimport md5 from 'md5';\n\nimport { head } from './utils';\n\nfunction metricsCounterPath() {\n  return '/clientapi/metrics/counters';\n}\n\nfunction metricsCompletionSelectedPath() {\n  return '/clientapi/metrics/completions/selected';\n}\n\nfunction languagesPath() {\n  return '/clientapi/languages';\n}\n\nfunction accountPath() {\n  return '/api/account/user';\n}\n\nfunction statusPath(path) {\n  return [\n    '/clientapi/status',\n    `filename=${encodeURI(normalizeDriveLetter(path))}`,\n  ].join('?');\n}\n\nfunction signaturePath() {\n  return '/clientapi/editor/signatures';\n}\n\nfunction searchPath(query, offset = 0, limit = 10) {\n  return [\n    '/api/editor/search',\n    [\n      `q=${encodeURI(query)}`,\n      `offset=${offset}`,\n      `limit=${limit}`,\n    ].join('&'),\n  ].join('?');\n}\n\nfunction projectDirPath(path) {\n  return [\n    '/clientapi/projectdir',\n    `filename=${encodeURI(normalizeDriveLetter(path))}`,\n  ].join('?');\n}\n\nfunction shouldNotifyPath(path) {\n  return [\n    '/clientapi/permissions/notify',\n    `filename=${encodeURI(normalizeDriveLetter(path))}`,\n  ].join('?');\n}\n\nfunction settingsPath(key) {\n  return '/clientapi/settings/' + key;\n}\n\nfunction completionsPath() {\n  return '/clientapi/editor/complete';\n}\n\nfunction reportPath(data) {\n  const symbol = head(data.symbol);\n\n  return valueReportPath(symbol.id);\n}\n\nfunction valueReportPath(id) {\n  return `/api/editor/value/${id}`;\n}\n\nfunction symbolReportPath(id) {\n  return `/api/editor/symbol/${id}`;\n}\n\nfunction membersPath(id, page = 0, limit = 999) {\n  return [\n    `/api/editor/value/${id}/members`,\n    [\n      `offset=${page}`,\n      `limit=${limit}`,\n    ].join('&'),\n  ].join('?');\n}\n\nfunction usagesPath(id, page = 0, limit = 999) {\n  return [\n    `/api/editor/value/${id}/usages`,\n    [\n      `offset=${page}`,\n      `limit=${limit}`,\n    ].join('&'),\n  ].join('?');\n}\n\nfunction usagePath(id) {\n  return `/api/editor/usages/${id}`;\n}\n\nfunction examplePath(id) {\n  return `/api/python/curation/${id}`;\n}\n\nfunction openDocumentationInWebURL(id) {\n  const url = `http://localhost:46624/clientapi/desktoplogin?d=/docs/${escapeId(id)}`;\n  return url;\n}\n\nfunction openSignatureInWebURL(id) {\n  const url = `http://localhost:46624/clientapi/desktoplogin?d=/docs/${escapeId(id)}%23signature`;\n  return url;\n}\n\nfunction openExampleInWebURL(id) {\n  const url = `http://localhost:46624/clientapi/desktoplogin?d=/examples/python/${escapeId(id)}`;\n  return url;\n}\n\nfunction hoverPath(document, position) {\n  position = new vscode.Position(position.line, position.character);\n  const state = md5(document.getText());\n  const filename = document.fileName;\n  const buffer = cleanPath(filename);\n  const pos = document.offsetAt(position);\n  const encoding = 'utf-16';\n  return [\n    `/api/buffer/vscode/${buffer}/${state}/hover`,\n    [\n      `cursor_runes=${pos}`,\n      `offset_encoding=${encoding}`,\n    ].join('&'),\n  ].join('?');\n}\n\nfunction escapeId(id) {\n  return encodeURI(String(id)).replace(/;/g, '%3B');\n}\n\nfunction cleanPath(p) {\n  return encodeURI(normalizeDriveLetter(p))\n    .replace(/^([a-zA-Z]):/, (m, d) => `/windows/${d}`)\n    .replace(/\\/|\\\\|%5C/g, ':');\n}\n\nfunction serializeRangeForPath(range) {\n  return `${range.start.row}:${range.start.column}/${range.end.row}:${range.end.column}`;\n}\n\nfunction normalizeDriveLetter(str) {\n  return str.replace(/^[a-z]:/, m => m.toUpperCase());\n}\n\nexport {\n  accountPath,\n  completionsPath,\n  examplePath,\n  hoverPath,\n  languagesPath,\n  membersPath,\n  metricsCounterPath,\n  metricsCompletionSelectedPath,\n  normalizeDriveLetter,\n  openDocumentationInWebURL,\n  openExampleInWebURL,\n  openSignatureInWebURL,\n  projectDirPath,\n  reportPath,\n  searchPath,\n  serializeRangeForPath,\n  shouldNotifyPath,\n  settingsPath,\n  signaturePath,\n  statusPath,\n  symbolReportPath,\n  usagePath,\n  usagesPath,\n  valueReportPath,\n};\n","module.exports = require(\"md5\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(14);\n"],"sourceRoot":""}