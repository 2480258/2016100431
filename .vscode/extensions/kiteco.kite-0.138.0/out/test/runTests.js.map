{"version":3,"sources":[".././test/runTests.js","../external \"path\"","../external \"vscode-test\"","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;AAA6B;AACkC;;AAE/D;AACA;AACA,sBAAsB,yCAAY,CAAC,yCAAY;AAC/C;AACA;AACA,qCAAqC,yCAAY;;AAEjD;AACA;AACA,+BAA+B,yCAAY;;AAE3C,uCAAuC,mEAAsB;AAC7D;;AAEA,2BAA2B,qDAAQ;AACnC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA,kC;;;;;;ACAA,yC;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"runTests.js","sourcesContent":["import * as path from 'path';\nimport { runTests, downloadAndUnzipVSCode } from 'vscode-test';\n\nasync function main() {\n  try {\n    const __dirname = path.resolve(path.dirname(''));\n    // The folder containing the Extension Manifest package.json\n    // Passed to `--extensionDevelopmentPath`\n    const extensionDevelopmentPath = path.resolve(__dirname, '.');\n\n    // The path to the extension test runner script\n    // Passed to --extensionTestsPath\n    const extensionTestsPath = path.resolve(__dirname, './out/test');\n\n    const vscodeExecutablePath = await downloadAndUnzipVSCode('stable');\n    console.log(\"Finished downloading VSCode to \", vscodeExecutablePath);\n\n    const exitCode = await runTests({\n      vscodeExecutablePath,\n      extensionDevelopmentPath,\n      extensionTestsPath,\n      launchArgs: ['--disable-extensions']\n    });\n\n    console.log(\"Finished running tests with exit code\", exitCode);\n  } catch (err) {\n    console.error('Failed to run tests: ', err);\n    process.exit(1);\n  }\n}\n\nmain();\n","module.exports = require(\"path\");;","module.exports = require(\"vscode-test\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(0);\n"],"sourceRoot":""}