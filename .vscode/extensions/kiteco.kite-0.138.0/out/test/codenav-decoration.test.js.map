{"version":3,"sources":["../external \"path\"",".././test/codenav-decoration.test.ts","../external \"vscode\"","../external \"chai\"","../external \"sinon\"","../external \"kite-api\"",".././src/codenav-decoration.ts","../external \"process\"","../webpack/bootstrap","../webpack/startup"],"names":[],"mappings":"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","file":"codenav-decoration.test.js","sourcesContent":["module.exports = require(\"path\");;","import {\n  DecorationOptions,\n  MarkdownString,\n  Position,\n  Selection,\n  TextEditorSelectionChangeKind,\n  workspace,\n  window,\n} from 'vscode';\n\nimport * as path from 'path';\n\nimport { assert } from 'chai';\nimport * as sinon from 'sinon';\n\nimport * as KiteAPI from 'kite-api';\nimport KiteRelatedCodeDecorationsProvider from '../src/codenav-decoration';\n\ndescribe('KiteRelatedCodeDecorationsProvider', () => {\n\n  it('hooks into the onDidChangeTextEditorSelection callback when initialized', () => {\n    const onDidChangeTextEditorSelection = sinon.spy();\n    new KiteRelatedCodeDecorationsProvider({ onDidChangeTextEditorSelection });\n\n    assert.isTrue(onDidChangeTextEditorSelection.called);\n    assert.isFunction(onDidChangeTextEditorSelection.calledWith);\n  });\n\n  describe(\"for various line decoration API responses\", () => {\n    let setDecorationSpy: sinon.SinonSpy;\n    let getLineDecorationStub: sinon.SinonStub;\n    let provider: KiteRelatedCodeDecorationsProvider;\n    let fireEvent: () => Promise<void>;\n    beforeEach(async () => {\n      getLineDecorationStub = sinon.stub(KiteAPI, \"getLineDecoration\");\n      provider = new KiteRelatedCodeDecorationsProvider(window);\n      ({ setDecorationSpy, fireEvent } = await setupDocument(provider));\n    });\n\n    afterEach(() => {\n      getLineDecorationStub.reset();\n      getLineDecorationStub.restore();\n      setDecorationSpy.restore();\n    });\n\n    it('sets the decoration when project_ready === true', async () => {\n      const inlineMessage = \"Find related code in kiteco\";\n      const hoverMessage = \"Search for related code in kiteco which may be related to this line\";\n      getLineDecorationStub.callsFake(() => {\n        return {\n          inline_message: inlineMessage,\n          hover_message: hoverMessage,\n          project_ready: true,\n        };\n      });\n      await fireEvent();\n      const opts: DecorationOptions[] = setDecorationSpy.lastCall.args[1];\n\n      assert.isAbove(opts.length, 0, \"Last call should include options, which shows the decoration\");\n      assert.include((opts[0].hoverMessage as MarkdownString).value, hoverMessage);\n      assert.include(opts[0].renderOptions.after.contentText, inlineMessage);\n    });\n\n    it('does not set the decoration when enableLineDecoration === false', async () => {\n      const getConfigurationStub = sinon.stub(provider, \"enabled\").callsFake(() => false);\n      await fireEvent();\n\n      assert.isFalse(getLineDecorationStub.called);\n      assert.isFalse(setDecorationSpy.called);\n\n      getConfigurationStub.restore();\n    });\n\n    it('does not set the decoration when project_ready === false', async () => {\n      getLineDecorationStub.callsFake(() => {\n        return {\n          inline_message: \"\",\n          hover_message: \"\",\n          project_ready: false,\n        };\n      });\n      await fireEvent();\n\n      setDecorationSpy.getCalls().forEach(call => {\n        assert.deepEqual(call.args[1], [], \"should have never been called with options\");\n      });\n    });\n\n    it('does not rerequest the decoration when project_ready === undefined', async () => {\n      getLineDecorationStub.callsFake(() => {\n        return {\n          inline_message: \"\",\n          hover_message: \"\",\n          project_ready: undefined,\n        };\n      });\n      await fireEvent();\n      assert.isTrue(getLineDecorationStub.calledOnce);\n\n      await fireEvent();\n      assert.isAtMost(getLineDecorationStub.callCount, 1);\n\n      setDecorationSpy.getCalls().forEach(call => {\n        assert.deepEqual(call.args[1], [], \"setDecoration should not have been called with options\");\n      });\n    });\n  });\n});\n\nasync function setupDocument(\n  decorationProvider: KiteRelatedCodeDecorationsProvider\n) : Promise<{\n  setDecorationSpy: sinon.SinonSpy,\n  fireEvent: () => Promise<void>\n}> {\n  const testDocument = await workspace.openTextDocument(\n    path.resolve(__dirname, \"..\", \"..\", \"test\", \"codenav-decoration.test.ts\")\n  );\n  const textEditor = await window.showTextDocument(testDocument);\n  return {\n    setDecorationSpy: sinon.spy(textEditor, \"setDecorations\"),\n    fireEvent: () => {\n      return decorationProvider.onDidChangeTextEditorSelection({\n        textEditor,\n        selections: [\n          new Selection(\n            new Position(0,0),\n            new Position(0,0),\n          ),\n        ],\n        kind: TextEditorSelectionChangeKind.Mouse,\n      });\n    }\n  };\n}\n","module.exports = require(\"vscode\");;","module.exports = require(\"chai\");;","module.exports = require(\"sinon\");;","module.exports = require(\"kite-api\");;","import * as path from 'path';\nimport * as process from 'process';\nimport {\n  DecorationOptions,\n  DecorationRangeBehavior,\n  Event,\n  extensions,\n  MarkdownString,\n  Position,\n  Range,\n  TextEditor,\n  TextEditorDecorationType,\n  TextEditorSelectionChangeEvent,\n  TextEditorSelectionChangeKind,\n  ThemeColor,\n  window,\n  workspace\n} from 'vscode';\n\nimport * as KiteAPI from \"kite-api\";\n\nconst relatedCodeLineDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n  rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n});\n\ninterface decorationStatusResponse {\n  inlineMessage: string,\n  hoverMessage: string,\n  projectReady: boolean,\n}\n\ninterface IOnDidChangeTextEditorSelection {\n  onDidChangeTextEditorSelection: Event<TextEditorSelectionChangeEvent>\n}\n\nexport default class KiteRelatedCodeDecorationsProvider {\n  private lineInfo: decorationStatusResponse | undefined\n  private activeEditor: TextEditor | undefined\n  private editTimeout: ReturnType<typeof setTimeout> | undefined\n\n  constructor(win: IOnDidChangeTextEditorSelection = window) {\n    this.lineInfo = undefined;\n    this.activeEditor = undefined;\n    this.editTimeout = undefined;\n    win.onDidChangeTextEditorSelection(this.onDidChangeTextEditorSelection.bind(this));\n  }\n\n  public dispose(): void {\n    // Clears all decorations of this type\n    relatedCodeLineDecoration.dispose();\n  }\n\n  // For testing and easy stubbing\n  public enabled(): boolean {\n    return workspace.getConfiguration('kite').codefinder.enableLineDecoration;\n  }\n\n  // Public for testing\n  public async onDidChangeTextEditorSelection(event: TextEditorSelectionChangeEvent): Promise<void> {\n    if (!this.enabled()) {\n      return;\n    }\n\n    if (typeof(this.editTimeout) === 'undefined' && (event.kind === TextEditorSelectionChangeKind.Command || event.kind === TextEditorSelectionChangeKind.Mouse)) {\n      // If timeout is not set (i.e. the decoration is already showing), and the cursor is moved by\n      // a non-edit event, then show the decoration immediately.\n      await this.decorate(event);\n\n    } else {\n      // Otherwise, show the decoration after 1 second of inactivity.\n      this.clearDecorations(event.textEditor);\n\n      if (typeof(this.editTimeout) !== 'undefined') {\n        clearTimeout(this.editTimeout);\n        this.editTimeout = undefined;\n      }\n\n      this.editTimeout = setTimeout(() => {\n        this.decorate(event);\n      }, 1000);\n    }\n  }\n\n  private async decorate(event: TextEditorSelectionChangeEvent): Promise<void> {\n    const editor = event.textEditor;\n    const applicable = this.lineInfo && this.lineInfo.projectReady !== undefined;\n    const ready = this.lineInfo && this.lineInfo.projectReady;\n    if (!this.lineInfo || editor !== this.activeEditor || (applicable && !ready)) {\n      await this.reset(editor);\n    } else if (event.selections.length != 1) {\n      await this.reset(editor);\n      return;\n    }\n\n    if (this.lineInfo && this.lineInfo.projectReady) {\n      const cursor: Position = event.selections[0].active;\n      const opts: DecorationOptions = {\n        hoverMessage: this.hoverMessage(this.lineInfo.hoverMessage),\n        range: this.lineEnd(cursor),\n        renderOptions: {\n          after: {\n            contentText: `${this.lineInfo.inlineMessage}`,\n            margin: '0 0 0 4em',\n            color: new ThemeColor('textSeparator.foreground'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n          }\n        }\n      };\n      editor.setDecorations(relatedCodeLineDecoration, [opts]);\n    }\n\n    this.editTimeout = undefined;\n  }\n\n  private hoverMessage(hover: string): MarkdownString {\n    let logo = path.join(extensions.getExtension(\"kiteco.kite\").extensionPath, \"dist\", \"assets\", \"images\", \"logo-light-blue.svg\");\n    if (process.platform === 'win32') {\n      logo = `file:\\\\\\\\\\\\${logo}`;\n    }\n    const md = new MarkdownString(`![KiteIcon](${logo}|height=12)&nbsp;&nbsp;[${hover}](command:kite.related-code-from-line)`);\n    // Must mark as trusted to run commands in MarkdownStrings\n    md.isTrusted = true;\n    return md;\n  }\n\n  private lineEnd(pos: Position): Range {\n    const ending = pos.with(pos.line, 9999);\n    return new Range(ending, ending);\n  }\n\n  private async reset(editor: TextEditor): Promise<void> {\n    this.clearDecorations(editor);\n    const info = await this.fetchDecoration(editor.document.fileName);\n    if (!info) {\n      return;\n    }\n    this.lineInfo = info;\n  }\n\n  private clearDecorations(editor: TextEditor) {\n    editor.setDecorations(relatedCodeLineDecoration, []);\n    this.activeEditor = editor;\n    this.lineInfo = undefined;\n  }\n\n  private async fetchDecoration(filename: string): Promise<decorationStatusResponse | null> {\n    try {\n      const resp = await KiteAPI.getLineDecoration(filename);\n      if (resp && !resp.err) {\n        return {\n          inlineMessage: resp.inline_message,\n          hoverMessage: resp.hover_message,\n          projectReady: resp.project_ready,\n        } as decorationStatusResponse;\n      }\n    } catch (e) {\n      // pass\n    }\n    return null;\n  }\n}\n","module.exports = require(\"process\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(7);\n"],"sourceRoot":""}